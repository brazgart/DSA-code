#BlueJ class context
comment0.params=
comment0.target=EmptyBinarySearchTree()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ EmptyBinarySearchTree\r\n
comment1.params=
comment1.target=java.lang.Comparable\ getValue()
comment1.text=\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\ \r\n
comment10.params=
comment10.target=BinaryTree\ getRight()
comment10.text=\r\n\ @return\ \ \ \ \ \ \ \ right\ child\r\n
comment11.params=
comment11.target=BinaryTree\ getLeft()
comment11.text=\r\n\ @return\ \ \ \ \ \ \ \ left\ child\r\n
comment12.params=
comment12.target=boolean\ isEmpty()
comment13.params=
comment13.target=java.lang.String\ toString()
comment14.params=
comment14.target=java.lang.String\ toStr()
comment15.params=
comment15.target=list.Iterator\ iterator()
comment16.params=
comment16.target=int\ size()
comment16.text=\ \r\n\ @return\ the\ number\ of\ values\ in\ the\ \r\n\ family\ of\ this\ Binary\ Tree\ \r\n
comment17.params=
comment17.target=int\ getHeight()
comment18.params=
comment18.target=java.lang.Comparable\ getSmallest()
comment18.text=\ @return\ the\ smallest\ value\ in\ the\ family\ of\ this\ BinaryTree,\ or\ null\r\n\ \ \ \ if\ this\ BinaryTree\ is\ empty\r\n
comment2.params=obj
comment2.target=boolean\ equals(java.lang.Object)
comment3.params=value
comment3.target=void\ setValue(java.lang.Comparable)
comment4.params=left
comment4.target=void\ setLeft(BinaryTree)
comment5.params=right
comment5.target=void\ setRight(BinaryTree)
comment6.params=value
comment6.target=boolean\ containsKey(java.lang.Comparable)
comment7.params=value
comment7.target=BinaryTree\ add(java.lang.Comparable)
comment8.params=obj
comment8.target=BinaryTree\ remove(java.lang.Object)
comment9.params=value
comment9.target=java.lang.Comparable\ get(java.lang.Comparable)
numComments=19
